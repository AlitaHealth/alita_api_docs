openapi: 3.0.0
info:
  title: Alita Backend API
  version: 1.0.0
  description: API documentation for Alita Backend

servers:
  - url: /api/v1/rest
    description: Development server

tags:
  - name: Organization
    description: Endpoints for managing organizations

  - name: App
    description: Endpoints for managing apps

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Organization:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        site:
          type: string
        locations_data:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              service_types:
                type: array
                items:
                  type: string
        is_deleted:
          type: boolean
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Location:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        organization:
          type: integer
        service_types:
          type: array
          items:
            $ref: '#/components/schemas/ServiceType'

    ServiceType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    App:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        nickname:
          type: string
        initial_message:
          type: string
        system_prompt:
          type: string
        type:
          type: string
        location:
          type: string
        isLanding:
          type: boolean
        published:
          type: boolean
        organization:
          $ref: '#/components/schemas/Organization'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Agent:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        url_path:
          type: string
        initial_message:
          type: string
        subtitle:
          type: string
        system_prompt:
          type: string
        ai_model:
          type: string
        logo:
          type: string
        agent_img:
          type: string
        calendly_integration:
          type: boolean
        prechat:
          type: boolean
        app:
          $ref: '#/components/schemas/App'

    ChatStyle:
      type: object
      properties:
        h_bg_color:
          type: string
        h_text_color:
          type: string
        h_font_size:
          type: string
        u_bg_color:
          type: string
        u_text_color:
          type: string
        u_font_size:
          type: string
        b_bg_color:
          type: string
        b_text_color:
          type: string
        b_font_size:
          type: string
        h_text_position:
          type: string
        u_text_position:
          type: string
        b_text_position:
          type: string
        border_radius:
          type: string
        background_color:
          type: string
        width:
          type: string
        height:
          type: string
        hx_padding:
          type: string
        hy_padding:
          type: string
        text_color:
          type: string
        p_bg_color:
          type: string
        p_text_color:
          type: string
        p_font_size:
          type: string
        p_border_round:
          type: string
        p_padding_x:
          type: string

    CalendlyLink:
      type: object
      properties:
        id:
          type: integer
        link:
          type: string
        name:
          type: string
        type:
          type: string
        app:
          $ref: '#/components/schemas/App'

    PresetBubble:
      type: object
      properties:
        id:
          type: integer
        role:
          type: string
        message:
          type: string
        event:
          type: string
        app:
          $ref: '#/components/schemas/App'

    ChatData:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        source:
          type: string
        vdb_namespace:
          type: string
        vdb_index:
          type: string
        trained:
          type: boolean
        created_by:
          type: integer

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        status:
          type: integer

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object

paths:
  # Organization Management
  /organization/:
    get:
      summary: List all organizations
      tags:
        - Organization
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of organizations
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Organization'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a new organization
      tags:
        - Organization
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - site
                - locations
              properties:
                name:
                  type: string
                site:
                  type: string
                locations:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      service_types:
                        type: array
                        items:
                          type: string
      responses:
        '201':
          description: Organization created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Organization'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /organization/{uuid}/:
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get organization details
      tags:
        - Organization
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Organization details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Organization'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update organization
      tags:
        - Organization
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                site:
                  type: string
                locations:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      service_types:
                        type: array
                        items:
                          type: string
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Organization'
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete organization
      tags:
        - Organization
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Organization deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: string
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /organization/{uuid}/locations/:
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get locations in an organization
      tags:
        - Organization
      security:
        - bearerAuth: [ ]
      responses:
        '200':
          description: Locations list
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Location'
                  status:
                    type: string
                  code:
                    type: integer
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      summary: Create a new location at an organization
      tags:
        - Organization
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: unique name of new location
                service_type_ids:
                  type: array
                  description: List of service type IDs to associate with the location
                  items:
                    type: integer
      responses:
        '200':
          description: Location created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                  status:
                    type: string
                  code:
                    type: integer
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: Update Location
      tags:
        - Organization
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - location_id
              properties:
                location_id:
                  type: integer
                name:
                  type: string
                service_type_ids:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Location updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  service_types:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceType'
                  status:
                    type: string
                  code:
                    type: integer
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete organization
      tags:
        - Organization
      security:
        - bearerAuth: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - location_id
              properties:
                location_id:
                  type: integer
      responses:
        '200':
          description: Location deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                  status:
                    type: string
                  code:
                    type: integer
        '404':
          description: Organization not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # App Management
  /app-list/:
    get:
      summary: List all apps with their organizations
      tags:
        - App
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of apps with organizations
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        organization:
                          $ref: '#/components/schemas/Organization'
                        apps:
                          type: array
                          items:
                            $ref: '#/components/schemas/App'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /app-data/:
    post:
      summary: Create a new app
      tags:
        - App
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - isLanding
              properties:
                name:
                  type: string
                organizationId:
                  type: string
                  format: uuid
                nickname:
                  type: string
                initialMessage:
                  type: string
                systemPrompt:
                  type: string
                type:
                  type: string
                location:
                  type: string
                isLanding:
                  type: boolean
      responses:
        '201':
          description: App created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/App'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /app-data/{uuid}/:
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get app details
      tags:
        - App
      security:
        - bearerAuth: []
      responses:
        '200':
          description: App details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/App'
        '404':
          description: App not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update app
      tags:
        - App
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                nickname:
                  type: string
                initialMessage:
                  type: string
                systemPrompt:
                  type: string
                type:
                  type: string
                location:
                  type: string
                isLanding:
                  type: boolean
      responses:
        '200':
          description: App updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/App'
        '404':
          description: App not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete app
      tags:
        - App
      security:
        - bearerAuth: []
      responses:
        '200':
          description: App deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: string
        '404':
          description: App not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /app-style/{uuid}/:
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
    put:
      summary: Update app style
      tags:
        - App
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatStyle'
      responses:
        '200':
          description: App style updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/App'
        '404':
          description: App not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /app-publish/{uuid}/:
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Publish app
      tags:
        - App
      security:
        - bearerAuth: []
      responses:
        '200':
          description: App published successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/App'
        '404':
          description: App not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Calendly Integration
  /caller-data/:
    post:
      summary: Create a new Calendly link
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - app_uuid
                - link
                - name
                - type
              properties:
                app_uuid:
                  type: string
                  format: uuid
                link:
                  type: string
                name:
                  type: string
                type:
                  type: string
      responses:
        '201':
          description: Calendly link created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendlyLink'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /caller-data/{uuid}/:
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get Calendly links for an app
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of Calendly links
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendlyLink'
        '404':
          description: App not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update Calendly link
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                link:
                  type: string
                name:
                  type: string
                type:
                  type: string
      responses:
        '200':
          description: Calendly link updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendlyLink'
        '404':
          description: Calendly link not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete Calendly link
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Calendly link deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CalendlyLink'
        '404':
          description: Calendly link not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /track-booking/:
    post:
      summary: Track booking event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - agentId
                - link
                - type
              properties:
                agentId:
                  type: string
                  format: uuid
                link:
                  type: string
                type:
                  type: string
                  enum: [click, schedule]
      responses:
        '201':
          description: Booking event tracked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Agent or Calendly link not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /calendly-analytics/:
    get:
      summary: Get Calendly analytics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Analytics data retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date:
                      type: string
                      format: date
                    name:
                      type: string
                    bookingclick:
                      type: integer
                    bookingschedule:
                      type: integer
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Preset Bubbles
  /bubble-data/:
    post:
      summary: Create a new preset bubble
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - app_uuid
                - role
                - message
                - event
              properties:
                app_uuid:
                  type: string
                  format: uuid
                role:
                  type: string
                message:
                  type: string
                event:
                  type: string
      responses:
        '201':
          description: Preset bubble created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PresetBubble'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /bubble-data/{uuid}/:
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get preset bubbles for an app
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of preset bubbles
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PresetBubble'
        '404':
          description: App not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update preset bubble
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: integer
                role:
                  type: string
                message:
                  type: string
                event:
                  type: string
      responses:
        '200':
          description: Preset bubble updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PresetBubble'
        '404':
          description: Preset bubble not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete preset bubble
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Preset bubble deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/PresetBubble'
        '404':
          description: Preset bubble not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /track-presetbubble-click/:
    post:
      summary: Track preset bubble click
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - agentId
                - bubbleId
              properties:
                agentId:
                  type: string
                  format: uuid
                bubbleId:
                  type: integer
      responses:
        '201':
          description: Preset bubble click tracked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Agent or preset bubble not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Agent Management
  /agent-data/{slug}/:
    parameters:
      - name: slug
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Get agent details
      responses:
        '200':
          description: Agent details
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Agent'
        '404':
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /agent-update/{uuid}/:
    parameters:
      - name: uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
    put:
      summary: Update agent URL path
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url_path
              properties:
                url_path:
                  type: string
      responses:
        '200':
          description: Agent updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/Agent'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Data Source Management
  /data-source:
    post:
      summary: Upload data source
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - name
              properties:
                file:
                  type: string
                  format: binary
                name:
                  type: string
      responses:
        '201':
          description: Data source uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/ChatData'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /data-source/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    put:
      summary: Associate data source with app
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - app
              properties:
                app:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Data source associated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/App'
        '404':
          description: Data source or app not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /{slug}/data-list:
    parameters:
      - name: slug
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get data list for app
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Data list retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      user_data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ChatData'
                      app_data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ChatData'
        '404':
          description: App not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Schedule Management
  /submit-schedule/:
    post:
      summary: Submit schedule meeting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - phone
                - date
                - time
                - timezone
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phone:
                  type: string
                date:
                  type: string
                  format: date
                time:
                  type: string
                  format: time
                timezone:
                  type: string
      responses:
        '201':
          description: Schedule meeting submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      phone:
                        type: string
                      date:
                        type: string
                        format: date
                      time:
                        type: string
                        format: time
                      timezone:
                        type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Dashboard
  /dashboard-overview/:
    get:
      summary: Get dashboard overview
      security:
        - bearerAuth: []
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Dashboard data retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_active_agents:
                    type: integer
                  agents_data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        uuid:
                          type: string
                          format: uuid
                        calendly_links:
                          type: array
                          items:
                            type: object
                            properties:
                              link:
                                type: string
                              name:
                                type: string
                              type:
                                type: string
                        booking_schedules:
                          type: array
                          items:
                            type: object
                            properties:
                              date:
                                type: string
                                format: date
                              calendly_link__link:
                                type: string
                              count:
                                type: integer
                        booking_clicks:
                          type: array
                          items:
                            type: object
                            properties:
                              date:
                                type: string
                                format: date
                              calendly_link__link:
                                type: string
                              count:
                                type: integer
                        chat_histories:
                          type: array
                          items:
                            type: object
                            properties:
                              date:
                                type: string
                                format: date
                              count:
                                type: integer
                        preset_bubble_clicks:
                          type: array
                          items:
                            type: object
                            properties:
                              date:
                                type: string
                                format: date
                              preset_bubble__message:
                                type: string
                              count:
                                type: integer
                        preset_bubbles:
                          type: array
                          items:
                            type: object
                            properties:
                              message:
                                type: string
                              event:
                                type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse' 